/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.cresb.p1archivos.frontend.pantallas.ventas;

import com.cresb.p1archivos.backend.database.repository.StockRepository;
import com.cresb.p1archivos.backend.models.Descripcion;
import com.cresb.p1archivos.backend.models.Sucursal;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author benjamin
 */
public class ModificarCantidad extends javax.swing.JDialog {
    
    
    private final Sucursal sucursal;
    private Descripcion descripcion;
    private final StockRepository stockRepository = new StockRepository();
    
    /**
     * Creates new form ModificarCantidad
     */
    public ModificarCantidad(java.awt.Frame parent, boolean modal,Sucursal sucursal,Descripcion descripcion) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(parent);
        this.descripcion=descripcion;
        this.sucursal = sucursal;
        this.cargarInformacion();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnAplicar = new javax.swing.JButton();
        fieldCodgio = new javax.swing.JTextField();
        fieldNombre = new javax.swing.JTextField();
        spinnerCantidad = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Codigo:");

        jLabel2.setText("Producto:");

        jLabel3.setText("Cantidad:");

        btnAplicar.setText("Aplicar");
        btnAplicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAplicarActionPerformed(evt);
            }
        });

        fieldCodgio.setEditable(false);

        fieldNombre.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAplicar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(27, 27, 27)
                        .addComponent(fieldCodgio, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spinnerCantidad)
                            .addComponent(fieldNombre))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(fieldCodgio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(fieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(spinnerCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAplicar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAplicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAplicarActionPerformed
        
        try {
            int cantidad = (int) this.spinnerCantidad.getValue();
            var stock = this.stockRepository.findStockBySucursalAndCodigoProducto(this.sucursal.getId(), this.descripcion.getProducto().getId());
            if(cantidad > stock.getCantidad() || cantidad < 1){
                if(cantidad < 1){
                    throw new OutOfStockException(String.format("No se pueden solicitar %d unidades",cantidad,stock.getCantidad()));
                }else{
                    throw new OutOfStockException(String.format("No se pueden solicitar %d unidades en la sucursal solo hay %d unidades",cantidad,stock.getCantidad()));
                }
                
            }else{
                int opcion = JOptionPane.showConfirmDialog(this, "¿Desea continuar?", "Confirmación", JOptionPane.YES_NO_OPTION);
                if (opcion == JOptionPane.YES_OPTION) {
                    int op = JOptionPane.showConfirmDialog(this, "¿Esta seguro?", "Confirmación", JOptionPane.YES_NO_OPTION);
                    if (op == JOptionPane.YES_OPTION) {
                        this.descripcion.setCantidad(cantidad);
                        JOptionPane.showMessageDialog(this,"Se modifico con exito la cantidad","Exito",JOptionPane.INFORMATION_MESSAGE);
                        this.dispose();
                    }
                }
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this,"La cantidad debe de ser un valor numerico","Error de cantidad",JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"No se puede verificar el stock del producto","Error",JOptionPane.ERROR_MESSAGE);
        } catch (OutOfStockException e) {
            JOptionPane.showMessageDialog(this,e.getMessage(),"Error de stock",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAplicarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAplicar;
    private javax.swing.JTextField fieldCodgio;
    private javax.swing.JTextField fieldNombre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSpinner spinnerCantidad;
    // End of variables declaration//GEN-END:variables

    private void cargarInformacion() {
        this.fieldCodgio.setText(this.descripcion.getProducto().getId());
        this.fieldNombre.setText(this.descripcion.getProducto().getNombre());
        this.spinnerCantidad.setValue(this.descripcion.getCantidad());
    }
}
