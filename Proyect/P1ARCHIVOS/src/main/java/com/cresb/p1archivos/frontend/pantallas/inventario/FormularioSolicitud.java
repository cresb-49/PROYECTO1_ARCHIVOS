package com.cresb.p1archivos.frontend.pantallas.inventario;

import com.cresb.p1archivos.backend.database.repository.BodegaRepository;
import com.cresb.p1archivos.backend.database.repository.DisponiblidadSolicitudRepository;
import com.cresb.p1archivos.backend.database.repository.StockRepository;
import com.cresb.p1archivos.backend.models.Bodega;
import com.cresb.p1archivos.backend.models.DisponiblidadSolicitud;
import com.cresb.p1archivos.backend.models.Stock;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Dango
 */
public class FormularioSolicitud extends javax.swing.JDialog {

    private Stock stockDestino;
    private final DisponiblidadSolicitudRepository disponiblidadSolicitudRepository = new DisponiblidadSolicitudRepository();
    private final BodegaRepository bodegaRepository = new BodegaRepository();
    private final StockRepository stockRepository = new StockRepository();
    private ArrayList<DisponiblidadSolicitud> disponibilidad = new ArrayList<>();
    private DisponiblidadSolicitud selectedItem;
    
    /**
     * Creates new form FormularioSolicitud
     * @param parent
     * @param modal
     * @param stock
     */
    public FormularioSolicitud(java.awt.Frame parent, boolean modal,Stock stock) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(parent);
        this.stockDestino = stock;
        this.jTextField1.setText(this.stockDestino.getProducto().getId());
        this.jTextField2.setText(this.stockDestino.getProducto().getNombre());
        
        this.cargarDisponibilidad();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SOLICITUD DE PRODUCTO");

        jLabel1.setText("Codigo:");

        jTextField1.setEditable(false);

        jLabel2.setText("Nombre:");

        jTextField2.setEditable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setText("Lugar Disponible:");

        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel6.setText("Cantidad:");

        jTextField3.setEditable(false);

        jLabel7.setText("Solicitar:");

        jButton1.setText("Porcesar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox1, 0, 236, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField2))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        int pos = this.jComboBox1.getSelectedIndex();
        this.selectedItem = this.disponibilidad.get(pos);
        this.jTextField3.setText(String.valueOf(this.selectedItem.getStockOrigen().getCantidad()));
        
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int valor = (int) jSpinner1.getValue();
        if(valor < 1){
            JOptionPane.showMessageDialog(this, "El valor a solicitar debe ser mayor o igual", "Error", JOptionPane.ERROR_MESSAGE);
        }else{
            if(valor > this.selectedItem.getStockOrigen().getCantidad()){
                JOptionPane.showMessageDialog(this, "No puede solicitar mas productos de los disponibles", "Error", JOptionPane.ERROR_MESSAGE);
            }else{
                this.selectedItem.setCantidad(valor);
                this.selectedItem.setStockDestino(this.stockDestino);
                System.out.println(this.selectedItem.toString());
                try {
                    if(this.selectedItem.isIsSucursal()){
                        //Update sucursal origen
                        var stockViejo = new Stock(this.selectedItem.getStockOrigen().getProducto(), this.selectedItem.getStockOrigen().getSucursal(), (this.selectedItem.getStockDestino().getCantidad()-this.selectedItem.getCantidad()));
                        this.stockRepository.update(stockViejo);
                        //System.out.println(stockViejo.toString());
                        //Update sucursal destino
                        var stockNuevo = new Stock(this.selectedItem.getStockOrigen().getProducto(), this.selectedItem.getStockDestino().getSucursal(), (this.selectedItem.getStockDestino().getCantidad()+this.selectedItem.getCantidad()));
                        this.agregarStock(stockNuevo);
                        
                    }else{
                        //Update bodega
                        var bodega = new Bodega(this.selectedItem.getStockOrigen().getProducto(),(this.selectedItem.getStockOrigen().getCantidad()-this.selectedItem.getCantidad()));
                        //this.bodegaRepository.update(bodega);
                        System.out.println(bodega.toString());
                        //Update sucursal destino
                        var stockNuevo = new Stock(this.selectedItem.getStockOrigen().getProducto(), this.selectedItem.getStockDestino().getSucursal(), (this.selectedItem.getStockDestino().getCantidad()+this.selectedItem.getCantidad()));
                        this.agregarStock(stockNuevo);
                    }
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables

    private void cargarDisponibilidad() {
        try {
            this.disponibilidad = (ArrayList<DisponiblidadSolicitud>) this.disponiblidadSolicitudRepository.disponibilidad(this.stockDestino.getProducto().getId(), this.stockDestino.getSucursal());
            for (DisponiblidadSolicitud disponiblidadSolicitud : this.disponibilidad) {
                jComboBox1.addItem(disponiblidadSolicitud.getLugar());
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }

    private void agregarStock(Stock stockNuevo) throws SQLException {
        if(this.stockRepository.isStockExists(stockNuevo)){
            this.stockRepository.update(stockNuevo);
            System.out.println(stockNuevo.toString());
        }else{
            this.stockRepository.save(stockNuevo);
        }
    }
}
